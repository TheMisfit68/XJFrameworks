<?xml version="1.0" encoding="UTF-8"?>
<RBProject version="2016r4.1" FormatVersion="2" MinIDEVersion="20070100">
<block type="Module" ID="1727178751">
 <ObjName>JVSQLiteDatabase</ObjName>
 <ObjContainerID>1830289407</ObjContainerID>
 <IsClass>1</IsClass>
 <Superclass>SQLiteDatabase</Superclass>
 <ItemFlags>1</ItemFlags>
 <IsInterface>0</IsInterface>
 <Compatibility></Compatibility>
 <Method>
  <ItemName>InsertOrUpdateRecord</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function InsertOrUpdateRecord(ioRecord as Dictionary) As Boolean</SourceLine>
   <SourceLine>// Try to update first</SourceLine>
   <SourceLine>if ioRecord.HasKey("ID") then</SourceLine>
   <SourceLine>ioRecord.Remove("ID") // Never update or insert a PK</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>call updateRecords(ioRecord)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Dim newValues() as String</SourceLine>
   <SourceLine>if ioRecord.Count &lt;&gt; 0 then</SourceLine>
   <SourceLine>for each fieldName as String in ioRecord.Keys</SourceLine>
   <SourceLine>newValues.append(fieldName+" = ?")</SourceLine>
   <SourceLine>next</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>dim newValuesString as String= join(newValues, ", ")</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Insert if no changes where made by the previous statement</SourceLine>
   <SourceLine>dim insertConditions as String</SourceLine>
   <SourceLine>if  conditions &lt;&gt; "" then</SourceLine>
   <SourceLine>insertConditions = conditions+" AND Changes() = 0"</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>insertConditions = conditions+"Changes() = 0"</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim sqlString as String = "INSERT INTO "+tables+" ("+newValuesString+") SELECT WHERE "+insertConditions</SourceLine>
   <SourceLine>dim sqlStatement as SQLitePreparedStatement = Prepare(sqlString)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim allVariables() as Variant = concatenate(iorecord.values, mainFilter.values, fieldConditions.values)</SourceLine>
   <SourceLine>sqlStatement.bindType(allVariables)</SourceLine>
   <SourceLine>sqlStatement.bind(allVariables)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>sqlStatement.SQLExecute</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>If Error Then</SourceLine>
   <SourceLine>#if debugbuild then</SourceLine>
   <SourceLine>system.debuglog( _</SourceLine>
   <SourceLine>"[JVSQLiteDatabase] DB Error: " + ErrorMessage+ENDOFLINE+ _</SourceLine>
   <SourceLine>sqlString)</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine>Return FALSE</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return TRUE</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>ioRecord as Dictionary</ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>lastRowIDFromTable</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function lastRowIDFromTable(TableName as String) As Integer</SourceLine>
   <SourceLine>dim sqlString as String = "select seq from sqlite_sequence where name=?"</SourceLine>
   <SourceLine>dim sqlStatement as SQLitePreparedStatement = Prepare(sqlString)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim allVariables() as Variant = concatenate(array(tablename))</SourceLine>
   <SourceLine>sqlStatement.bindType(allVariables)</SourceLine>
   <SourceLine>sqlStatement.bind(allVariables)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim recordsFound as recordset = sqlStatement.SQLSelect</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>If Error Then</SourceLine>
   <SourceLine>#if debugbuild then</SourceLine>
   <SourceLine>system.debuglog( _</SourceLine>
   <SourceLine>"[JVSQLiteDatabase] DB Error: " + ErrorMessage+ENDOFLINE+ _</SourceLine>
   <SourceLine>sqlString)</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine>Return -1</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return recordsFound.Field("seq").IntegerValue</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>tableName as String</ItemParams>
  <ItemResult>Integer</ItemResult>
 </Method>
 <Method>
  <ItemName>lookupID</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function lookupID(lookupTable as String,lookupFieldName as String, lookupValue as string) As Integer</SourceLine>
   <SourceLine>dim sqlString as String = "Select ID From "+lookupTable+"' WHERE "+lookupFieldName+"=?"</SourceLine>
   <SourceLine>dim sqlStatement as SQLitePreparedStatement = Prepare(sqlString)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim allVariables() as Variant = concatenate(array(lookupValue))</SourceLine>
   <SourceLine>sqlStatement.bindType(allVariables)</SourceLine>
   <SourceLine>sqlStatement.bind(allVariables)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim recordsFound as recordset = sqlStatement.SQLSelect</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>If Error Then</SourceLine>
   <SourceLine>#if debugbuild then</SourceLine>
   <SourceLine>system.debuglog( _</SourceLine>
   <SourceLine>"[JVSQLiteDatabase] DB Error: " + ErrorMessage+ENDOFLINE+ _</SourceLine>
   <SourceLine>sqlString)</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine>Return -1</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>recordsFound.MoveFirst // Move to the first match</SourceLine>
   <SourceLine>return recordsFound.Field("seq").IntegerValue</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>lookupTable as String,lookupFieldName as String, lookupValue as string</ItemParams>
  <ItemResult>Integer</ItemResult>
 </Method>
 <Method>
  <ItemName>findRecords</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function findRecords() As Recordset</SourceLine>
   <SourceLine>dim sqlString as String ="SELECT * FROM "+tables+" WHERE "+conditions</SourceLine>
   <SourceLine>dim sqlStatement as SQLitePreparedStatement = Prepare(sqlString)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim allVariables() as Variant = concatenate(mainFilter.values, fieldConditions.values)</SourceLine>
   <SourceLine>sqlStatement.bindType(allVariables)</SourceLine>
   <SourceLine>sqlStatement.bind(allVariables)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim recordsFound as recordset = sqlStatement.SQLSelect</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>If Error Then</SourceLine>
   <SourceLine>#if debugbuild then</SourceLine>
   <SourceLine>system.debuglog( _</SourceLine>
   <SourceLine>"[JVSQLiteDatabase] DB Error: " + ErrorMessage+ENDOFLINE+ _</SourceLine>
   <SourceLine>sqlString)</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine>Return nil</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return recordsFound</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>Recordset</ItemResult>
 </Method>
 <Method>
  <ItemName>findDuplicateRecords</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function findDuplicateRecords(summaryFieldNames() as String) As RecordSet</SourceLine>
   <SourceLine>dim sqlString as String = "SELECT * FROM "+tables+" WHERE " +conditions+" GROUP BY  "+Join(summaryFieldNames, ", ")+" HAVING COUNT(*) &gt;= 2"</SourceLine>
   <SourceLine>dim sqlStatement as SQLitePreparedStatement = Prepare(sqlString)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim allVariables() as Variant = concatenate(mainFilter.values, fieldConditions.values)</SourceLine>
   <SourceLine>sqlStatement.bindType(allVariables)</SourceLine>
   <SourceLine>sqlStatement.bind(allVariables)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim recordsFound as recordset = sqlStatement.SQLSelect</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>If Error Then</SourceLine>
   <SourceLine>#if debugbuild then</SourceLine>
   <SourceLine>system.debuglog( _</SourceLine>
   <SourceLine>"[JVSQLiteDatabase] DB Error: " + ErrorMessage+ENDOFLINE+ _</SourceLine>
   <SourceLine>sqlString)</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine>Return nil</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return recordsFound</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>summaryFieldNames() as String</ItemParams>
  <ItemResult>RecordSet</ItemResult>
 </Method>
 <Method>
  <ItemName>updateRecords</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function updateRecords(updatedIORecord as dictionary) As Boolean</SourceLine>
   <SourceLine>Dim updatedValues() as String</SourceLine>
   <SourceLine>if updatedIORecord.Count &lt;&gt; 0 then</SourceLine>
   <SourceLine>for each fieldName as String in updatedIORecord.Keys</SourceLine>
   <SourceLine>updatedValues.append(fieldName+" = ?")</SourceLine>
   <SourceLine>next</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>dim updatedValuesString as String= join(updatedValues, ", ")</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim sqlString as String = "UPDATE "+tables+" SET "+updatedValuesString+" WHERE "+ conditions</SourceLine>
   <SourceLine>dim sqlStatement as SQLitePreparedStatement = Prepare(sqlString)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim allVariables() as Variant = concatenate(updatedIORecord.values, mainFilter.values, fieldConditions.values)</SourceLine>
   <SourceLine>sqlStatement.bindType(allVariables)</SourceLine>
   <SourceLine>sqlStatement.bind(allVariables)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>sqlStatement.SQLExecute</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>If Error Then</SourceLine>
   <SourceLine>#if debugbuild then</SourceLine>
   <SourceLine>system.debuglog( _</SourceLine>
   <SourceLine>"[JVSQLiteDatabase] DB Error: " + ErrorMessage+ENDOFLINE+ _</SourceLine>
   <SourceLine>sqlString)</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine>Return FALSE</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return TRUE</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>updatedIORecord as dictionary</ItemParams>
  <ItemResult>Boolean</ItemResult>
 </Method>
 <Method>
  <ItemName>constructor</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub constructor()</SourceLine>
   <SourceLine>Tables = ""</SourceLine>
   <SourceLine>mainFilter = new Dictionary</SourceLine>
   <SourceLine>fieldConditions = new Dictionary</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>findEmptyFields</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub findEmptyFields(emptyFieldNames() as String)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>emptyFieldNames() as String</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>findRelatedRecords</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function findRelatedRecords(relationShip as JVSQLiteRelationship) As Recordset</SourceLine>
   <SourceLine>dim sqlStatement as SQLitePreparedStatement = Prepare(relationShip.SQLiteView)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim allVariables() as Variant = concatenate(mainFilter.values, fieldConditions.values)</SourceLine>
   <SourceLine>sqlStatement.bindType(allVariables)</SourceLine>
   <SourceLine>sqlStatement.bind(allVariables)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>dim recordsFound as recordset = sqlStatement.SQLSelect</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>If Error Then</SourceLine>
   <SourceLine>#if debugbuild then</SourceLine>
   <SourceLine>system.debuglog( _</SourceLine>
   <SourceLine>"[JVSQLiteDatabase] DB Error: " + ErrorMessage+ENDOFLINE+ _</SourceLine>
   <SourceLine>sqlString)</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine>Return nil</SourceLine>
   <SourceLine>End If</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>return recordsFound</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>relationShip as JVSQLiteRelationship</ItemParams>
  <ItemResult>Recordset</ItemResult>
 </Method>
 <Property>
  <ItemName>tables</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>tables As String</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>tables As String</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>conditions</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>conditions As String</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>conditions As String</ItemDeclaration>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
  <SetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Set</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Set</SourceLine>
  </SetAccessor>
  <GetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Get</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>// Translate the filtes into a string that can be used as a condition in a SQLPreparedstatement</SourceLine>
   <SourceLine>Dim conditions() as String</SourceLine>
   <SourceLine>if mainFilter &lt;&gt; nil and mainFilter.Count &lt;&gt; 0 then</SourceLine>
   <SourceLine>for each fieldName as String in mainFilter.Keys</SourceLine>
   <SourceLine>conditions.append(fieldName+" = ?")</SourceLine>
   <SourceLine>next</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if fieldConditions &lt;&gt; nil and fieldConditions.Count &lt;&gt; 0 then</SourceLine>
   <SourceLine>for each fieldName as String in fieldConditions.Keys</SourceLine>
   <SourceLine>conditions.append(fieldName+" = ?")</SourceLine>
   <SourceLine>next</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>If conditions.ubound &lt;&gt; -1 then</SourceLine>
   <SourceLine> return Join(conditions, " AND ")</SourceLine>
   <SourceLine>else</SourceLine>
   <SourceLine>return ""</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>End Get</SourceLine>
  </GetAccessor>
 </Property>
 <Property>
  <ItemName>mainFilter</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>mainFilter As Dictionary</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>mainFilter As Dictionary</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>fieldConditions</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>fieldConditions As Dictionary</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>fieldConditions As Dictionary</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>summaryFields()</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>summaryFields() As String</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>summaryFields() As String</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <ViewBehavior>
  <ViewProperty>
   <ObjName>DatabaseFile</ObjName>
   <Visible>1</Visible>
   <ItemType>FolderItem</ItemType>
   <EditorType>FolderItem</EditorType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>DebugMode</ObjName>
   <Visible>1</Visible>
   <ItemType>Boolean</ItemType>
   <EditorType>Boolean</EditorType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>EncryptionKey</ObjName>
   <Visible>1</Visible>
   <ItemType>String</ItemType>
   <EditorType>String</EditorType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Index</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Left</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>LoadExtensions</ObjName>
   <Visible>1</Visible>
   <ItemType>Boolean</ItemType>
   <EditorType>Boolean</EditorType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>MultiUser</ObjName>
   <Visible>1</Visible>
   <ItemType>Boolean</ItemType>
   <EditorType>Boolean</EditorType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Name</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>ShortColumnNames</ObjName>
   <Visible>1</Visible>
   <ItemType>Boolean</ItemType>
   <EditorType>Boolean</EditorType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Super</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>ThreadYieldInterval</ObjName>
   <Visible>1</Visible>
   <ItemType>Integer</ItemType>
   <EditorType>Integer</EditorType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Timeout</ObjName>
   <Visible>1</Visible>
   <ItemType>Double</ItemType>
   <EditorType>Double</EditorType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Top</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>tables</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>String</ItemType>
   <EditorType>MultiLineEditor</EditorType>
  </ViewProperty>
 </ViewBehavior>
</block>
</RBProject>
